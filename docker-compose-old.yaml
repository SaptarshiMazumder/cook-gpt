version: "3.8"
networks:
  cookie-monster:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "172.28.0.0/16"

services:
  backend:
    build: ./backend
    container_name: backend_c
    ports:
      - '4000:4000'
    networks:
      cookie-monster:
        ipv4_address: "172.28.0.11"
    environment:
     - network.host=0.0.0.0
     - NODE_ENV=local
     - ES_HOST=elasticsearch
     - NODE_PORT=3000
     - ELASTIC_URL=http://elasticsearch:9200
    links:
        - elasticsearch
    depends_on:
      elasticsearch:
        condition: service_healthy
    # environment:
    #   - POSTGRES_HOST=192.168.1.7
    #   - POSTGRES_USER=postgres
    #   - POSTGRES_PASSWORD=gjmptwad



  frontend:
    build: ./frontend
    container_name: frontend_react
    ports:
      - '3000:3000'
    environment:
      - PORT=3000
    networks:
      - cookie-monster   # Set the environment variable to use port 3001

    stdin_open: true

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.0.1
    container_name: elasticsearch
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
      - xpack.security.enabled=false
    logging:
      driver: none
    ports:
      - '9200:9200'
    networks:
      cookie-monster:
        ipv4_address: "172.28.0.10"
    healthcheck:
      test: curl -s http://localhost:9200/_cluster/health || exit 1
      interval: 10s
      timeout: 5s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:8.0.1
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    networks:
      - cookie-monster

